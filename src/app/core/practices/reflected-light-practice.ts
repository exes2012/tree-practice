// Практика "Работа в отраженном свете"

import { PracticeContext, PracticeConfig } from '../models/practice-engine.types';
import { step, input, repeat, rating, practiceRating } from './practice-blocks';

/**
 * Практика "Работа в отраженном свете"
 */
export async function* reflectedLightPractice(context: PracticeContext) {
  // Шаг 1: Определи Небо и Землю в себе
  yield step(
    'define-heaven-earth',
    'Шаг 1: Определи Небо и Землю в себе',
    'Разграничь внутри себя получение и отдачу. Перегородка, которая находится между этими состояниями называется Парса. «Небом» называется твоё состояние отдачи, желание насладить в отношении других. «Землёй» — всё, что под Парсой. Все, что ради себя.'
  );

  // Шаг 2: Создай Новое Небо и Землю
  yield step(
    'create-new-heaven-earth',
    'Шаг 2: Создай Новое Небо и Землю',
    'Когда тебе приходит прямой свет, наслаждение, не соглашайся сразу. Это будет «старое небо и земля». Сопротивляйся. Говори: «Не хочу». Свет придёт ярче. Снова говори: «Не хочу». И он снова придет еще ярче.'
  );

  // Шаг 3: Прими ради Творца
  yield step(
    'accept-for-creator',
    'Шаг 3: Прими ради Творца',
    'Когда свет уже давит на тебя настолько, что «прямо Творец упрашивает тебя», вот тогда ты говоришь: «Ладно, ради Тебя я создаю новое небо и землю». В этот момент ты создаёшь новое ощущение поверх предыдущих, получая свет не для себя, а ради отдачи. Для этого ты притягиваешь свет до Парсы, но не ниже. При этом притягиваешь так, чтобы совершить удар с Парсой, и сделать отражение света снизу вверх. Этим действием ты создала новую границу и новое состояние.'
  );

  // Шаг 4: Создаем Малхут в Творце
  yield step(
    'create-malchut-in-creator',
    'Шаг 4: Создаем Малхут в Творце',
    'Ключевой момент — это не просто притягивать свет, и отражать его от себя, а сделать так, чтобы Творец притягивал этот отраженный свет от тебя. Этим ты становишься Ему подобным.\n\nМы своим отраженным светом, по сути дела, создаём ту самую Малхут в Творце. Иначе как ты станешь ему подобным? Ты создаешь в нём желание получать точно так, как он создал его в тебе.'
  );

  // Шаг 5: Ведение Отражённого Света
  yield step(
    'reflected-light-guidance',
    'Шаг 5: Ведение Отражённого Света',
    'Это работа «снизу-вверх». Мы не просто отражаем свет, а активно «убалтываем» Творца, чтобы Он начал этот свет от нас притягивать. Ты с намерением насладить Творца заставляешь Его «аккуратненько, чуть-чуть» притягивать свет от тебя. Он начинает притягивать, и ты ощущаешь, какой это кайф. Это стадия Хохма в отражённом свете, которая равна стадии Зэир Анпин в прямом свете. Усилие здесь — не в том, чтобы силой «протолкнуть» свет выше (в Бину), а в том, чтобы деликатно («аккуратненько, чуть-чуть») и с намерением насладить Его, углубить связь на этом уровне.'
  );

  // Шаг 6: Копирование Отношения
  yield step(
    'copy-relationship',
    'Шаг 6: Копирование Отношения',
    'Мы должны скопировать его отношение к нам из стадии Бина, вызывающее в нас благодарность, и вложить в наш отражённый свет. Только тогда Он начинает ощущать не просто свет, а конкретно нас как источник.\n\nТы продолжаешь ему «поддавать» этот свет. Но ты должна делать это осознанно, добавляя отношение, чтобы Он ощущал не просто кайф, а источник этого кайфа — то есть, тебя.'
  );

  // Шаг 7: Стадия Бина в Творце
  yield step(
    'bina-stage-in-creator',
    'Шаг 7: Стадия Бина в Творце',
    'Когда Он начинает улавливать тебя как источник, в Нём рождается благодарность. И тут происходит ключевой момент: Он перестаёт от тебя притягивать свет. Он как бы «выкидывает тебе тарелку с супом в лицо». Он делает это, потому что хочет поблагодарить тебя, отдать тебе в ответ. Он говорит: «Ничего не надо, хочу тебя благодарить». Ты в этот момент можешь ощутить разочарование, ведь ты испытывала огромный кайф, когда Он от тебя получал.'
  );

  // Шаг 8: Стадия ЗА в Творце
  yield step(
    'za-stage-in-creator',
    'Шаг 8: Стадия ЗА в Творце',
    'В момент, когда Он всё тебе выкидывает назад, твоя задача — проявить настойчивость. Ты говоришь Ему: «Не нужна твоя благодарность, продолжай от меня получать». Именно из-за твоего «жёсткого давления и настойчивости», Он говорит: «Ладно, ради тебя Я начинаю получать».'
  );

  // Шаг 9: Получение ради отдачи
  yield step(
    'receiving-for-bestowal',
    'Шаг 9: Получение ради отдачи',
    'Теперь Он притягивает от тебя свет, но делает это уже ради тебя, чтобы доставить наслаждение именно тебе. Он притягивает не только свет, но и тебя как источник этого света. Это и есть «получение ради отдачи» с Его стороны.'
  );

  // Шаг 10: Малхут отраженного света
  yield step(
    'malchut-reflected-light',
    'Шаг 10: Малхут отраженного света',
    'Поддавливай еще чуть сильнее, чтобы Он в отношении тебя выполнил стадию Далет, но с экраном. Притянул свет на полную катушку, сделал удар в экран и отразил этот свет к тебе.'
  );

  // Шаг 11: Далее
  yield step(
    'continuation',
    'Шаг 11: Далее',
    'Продолжай постепенно увеличивать давление светом, чтобы Он в отношении тебя выполнял поочередно все парцуфим и миры, пока Он не дойдет до мира Асия.'
  );

  // Финальная оценка ПРАКТИКИ
  yield practiceRating();
}

// Конфигурация практики
export const reflectedLightPracticeConfig: PracticeConfig = {
  id: 'reflected-light',
  title: 'Работа в отраженном свете',
  description:
    'Глубокая каббалистическая практика работы с отраженным светом, создания Малхут в Творце и достижения взаимного получения ради отдачи.',

  hasStartScreen: true,
  startScreenContent: {
    title: 'Работа в отраженном свете',
    description:
      'Это продвинутая каббалистическая практика, которая учит работать с отраженным светом, создавать Малхут в Творце и достигать состояния взаимного получения ради отдачи.',
    duration: '30-40 мин',
    level: 'Продвинутый',
  },

  practiceFunction: reflectedLightPractice,

  onFinish: async (context, result) => {
    // Save practice run to IndexedDB
    const { JournalService } = await import('../services/journal.service');
    const { dateToLocalDateKey } = await import('../services/db.service');

    const completedAt = new Date().toISOString();
    const dateKey = dateToLocalDateKey(new Date());

    const journal = new JournalService();
    await journal.savePracticeRun({
      practiceId: 'reflected-light',
      title: 'Работа в отраженном свете',
      route: '/practices/runner/reflected-light',
      completedAt,
      dateKey,
      rating: context.get('practice-final-rating') as number | undefined,
      duration: result.duration as number | undefined,
    });

    console.log('Practice completed with result:', result);
  },
};
