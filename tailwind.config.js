/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ['./src/**/*.{html,ts}'],
  darkMode: 'class',
  theme: {
    extend: {
      colors: {
        // Brand colors using CSS custom properties
                primary: {
          50:  'rgb(var(--color-primary-50) / <alpha-value>)',
          100: 'rgb(var(--color-primary-100) / <alpha-value>)',
          200: 'rgb(var(--color-primary-200) / <alpha-value>)',
          300: 'rgb(var(--color-primary-300) / <alpha-value>)',
          400: 'rgb(var(--color-primary-400) / <alpha-value>)',
          500: 'rgb(var(--color-primary-500) / <alpha-value>)',
          600: 'rgb(var(--color-primary-600) / <alpha-value>)',
          700: 'rgb(var(--color-primary-700) / <alpha-value>)',
          800: 'rgb(var(--color-primary-800) / <alpha-value>)',
          900: 'rgb(var(--color-primary-900) / <alpha-value>)',
        },
        brand: {
          50: 'rgb(var(--color-primary-50) / <alpha-value>)',
          100: 'rgb(var(--color-primary-100) / <alpha-value>)',
          200: 'rgb(var(--color-primary-200) / <alpha-value>)',
          300: 'rgb(var(--color-primary-300) / <alpha-value>)',
          400: 'rgb(var(--color-primary-400) / <alpha-value>)',
          500: 'rgb(var(--color-primary-500) / <alpha-value>)',
          600: 'rgb(var(--color-primary-600) / <alpha-value>)',
          700: 'rgb(var(--color-primary-700) / <alpha-value>)',
          800: 'rgb(var(--color-primary-800) / <alpha-value>)',
          900: 'rgb(var(--color-primary-900) / <alpha-value>)',
        },
        accent: {
          50: 'rgb(var(--color-accent-50) / <alpha-value>)',
          100: 'rgb(var(--color-accent-100) / <alpha-value>)',
          200: 'rgb(var(--color-accent-200) / <alpha-value>)',
          300: 'rgb(var(--color-accent-300) / <alpha-value>)',
          400: 'rgb(var(--color-accent-400) / <alpha-value>)',
          500: 'rgb(var(--color-accent-500) / <alpha-value>)',
          600: 'rgb(var(--color-accent-600) / <alpha-value>)',
          700: 'rgb(var(--color-accent-700) / <alpha-value>)',
          800: 'rgb(var(--color-accent-800) / <alpha-value>)',
          900: 'rgb(var(--color-accent-900) / <alpha-value>)',
        },
        success: {
          50: 'rgb(var(--color-success-50) / <alpha-value>)',
          100: 'rgb(var(--color-success-100) / <alpha-value>)',
          200: 'rgb(var(--color-success-200) / <alpha-value>)',
          300: 'rgb(var(--color-success-300) / <alpha-value>)',
          400: 'rgb(var(--color-success-400) / <alpha-value>)',
          500: 'rgb(var(--color-success-500) / <alpha-value>)',
          600: 'rgb(var(--color-success-600) / <alpha-value>)',
          700: 'rgb(var(--color-success-700) / <alpha-value>)',
          800: 'rgb(var(--color-success-800) / <alpha-value>)',
          900: 'rgb(var(--color-success-900) / <alpha-value>)',
        },
        warning: {
          50: 'rgb(var(--color-warning-50) / <alpha-value>)',
          100: 'rgb(var(--color-warning-100) / <alpha-value>)',
          200: 'rgb(var(--color-warning-200) / <alpha-value>)',
          300: 'rgb(var(--color-warning-300) / <alpha-value>)',
          400: 'rgb(var(--color-warning-400) / <alpha-value>)',
          500: 'rgb(var(--color-warning-500) / <alpha-value>)',
          600: 'rgb(var(--color-warning-600) / <alpha-value>)',
          700: 'rgb(var(--color-warning-700) / <alpha-value>)',
          800: 'rgb(var(--color-warning-800) / <alpha-value>)',
          900: 'rgb(var(--color-warning-900) / <alpha-value>)',
        },
        error: {
          50: 'rgb(var(--color-error-50) / <alpha-value>)',
          100: 'rgb(var(--color-error-100) / <alpha-value>)',
          200: 'rgb(var(--color-error-200) / <alpha-value>)',
          300: 'rgb(var(--color-error-300) / <alpha-value>)',
          400: 'rgb(var(--color-error-400) / <alpha-value>)',
          500: 'rgb(var(--color-error-500) / <alpha-value>)',
          600: 'rgb(var(--color-error-600) / <alpha-value>)',
          700: 'rgb(var(--color-error-700) / <alpha-value>)',
          800: 'rgb(var(--color-error-800) / <alpha-value>)',
          900: 'rgb(var(--color-error-900) / <alpha-value>)',
        },
        neutral: {
          50: 'rgb(var(--color-neutral-50) / <alpha-value>)',
          100: 'rgb(var(--color-neutral-100) / <alpha-value>)',
          200: 'rgb(var(--color-neutral-200) / <alpha-value>)',
          300: 'rgb(var(--color-neutral-300) / <alpha-value>)',
          400: 'rgb(var(--color-neutral-400) / <alpha-value>)',
          500: 'rgb(var(--color-neutral-500) / <alpha-value>)',
          600: 'rgb(var(--color-neutral-600) / <alpha-value>)',
          700: 'rgb(var(--color-neutral-700) / <alpha-value>)',
          800: 'rgb(var(--color-neutral-800) / <alpha-value>)',
          900: 'rgb(var(--color-neutral-900) / <alpha-value>)',
        },
        // Practice-specific colors
        practice: {
          basic: {
            50: 'rgb(var(--practice-basic-50) / <alpha-value>)',
            100: 'rgb(var(--practice-basic-100) / <alpha-value>)',
            200: 'rgb(var(--practice-basic-200) / <alpha-value>)',
            300: 'rgb(var(--practice-basic-300) / <alpha-value>)',
            400: 'rgb(var(--practice-basic-400) / <alpha-value>)',
            500: 'rgb(var(--practice-basic-500) / <alpha-value>)',
            600: 'rgb(var(--practice-basic-600) / <alpha-value>)',
            700: 'rgb(var(--practice-basic-700) / <alpha-value>)',
          },
          small: {
            50: 'rgb(var(--practice-small-50) / <alpha-value>)',
            100: 'rgb(var(--practice-small-100) / <alpha-value>)',
            200: 'rgb(var(--practice-small-200) / <alpha-value>)',
            300: 'rgb(var(--practice-small-300) / <alpha-value>)',
            400: 'rgb(var(--practice-small-400) / <alpha-value>)',
            500: 'rgb(var(--practice-small-500) / <alpha-value>)',
            600: 'rgb(var(--practice-small-600) / <alpha-value>)',
            700: 'rgb(var(--practice-small-700) / <alpha-value>)',
          },
          yichudim: {
            50: 'rgb(var(--practice-yichudim-50) / <alpha-value>)',
            100: 'rgb(var(--practice-yichudim-100) / <alpha-value>)',
            200: 'rgb(var(--practice-yichudim-200) / <alpha-value>)',
            300: 'rgb(var(--practice-yichudim-300) / <alpha-value>)',
            400: 'rgb(var(--practice-yichudim-400) / <alpha-value>)',
            500: 'rgb(var(--practice-yichudim-500) / <alpha-value>)',
            600: 'rgb(var(--practice-yichudim-600) / <alpha-value>)',
            700: 'rgb(var(--practice-yichudim-700) / <alpha-value>)',
          },
          intention: {
            50: 'rgb(var(--practice-intention-50) / <alpha-value>)',
            100: 'rgb(var(--practice-intention-100) / <alpha-value>)',
            200: 'rgb(var(--practice-intention-200) / <alpha-value>)',
            300: 'rgb(var(--practice-intention-300) / <alpha-value>)',
            400: 'rgb(var(--practice-intention-400) / <alpha-value>)',
            500: 'rgb(var(--practice-intention-500) / <alpha-value>)',
            600: 'rgb(var(--practice-intention-600) / <alpha-value>)',
            700: 'rgb(var(--practice-intention-700) / <alpha-value>)',
          },
        },
        // Custom colors for inline styles
        custom: {
          fire: 'rgb(var(--color-fire) / <alpha-value>)',
          chart: 'rgb(var(--color-chart) / <alpha-value>)',
          calendar: 'rgb(var(--color-calendar) / <alpha-value>)',
          schedule: 'rgb(var(--color-schedule) / <alpha-value>)',
          psychology: 'rgb(var(--color-psychology) / <alpha-value>)',
          history: 'rgb(var(--color-history) / <alpha-value>)',
          man: 'rgb(var(--color-man) / <alpha-value>)',
          'my-location': 'rgb(var(--color-my-location) / <alpha-value>)',
          trending: 'rgb(var(--color-trending) / <alpha-value>)',
          sunny: 'rgb(var(--color-sunny) / <alpha-value>)',
          'self-improvement': 'rgb(var(--color-self-improvement) / <alpha-value>)',
          'auto-awesome': 'rgb(var(--color-auto-awesome) / <alpha-value>)',
          'track-changes': 'rgb(var(--color-track-changes) / <alpha-value>)',
        },
      },
      spacing: {
        xs: 'var(--space-xs)',
        sm: 'var(--space-sm)',
        md: 'var(--space-md)',
        lg: 'var(--space-lg)',
        xl: 'var(--space-xl)',
        base: 'var(--space-base)',
      },
      borderRadius: {
        base: 'var(--radius-base)',
        sm: 'var(--radius-sm)',
        md: 'var(--radius-md)',
        lg: 'var(--radius-lg)',
      },
      fontSize: {
        xs: 'var(--text-xs)',
        sm: 'var(--text-sm)',
        base: 'var(--text-base)',
        lg: 'var(--text-lg)',
        xl: 'var(--text-xl)',
        '2xl': 'var(--text-2xl)',
      },
      minHeight: {
        input: 'var(--min-height-input)',
        touch: 'var(--min-height-touch)',
      },
      minWidth: {
        menu: 'var(--min-width-menu)',
        touch: 'var(--min-height-touch)',
      },
      maxWidth: {
        container: 'var(--max-width-container)',
      },
    },
  },
  plugins: [
    require('@tailwindcss/container-queries'),
    require('@tailwindcss/forms'),
    require('tailwindcss-animate'),
  ],
};
